{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["IndexPage","data","allMdx","site","socialEnums","socialLinks","Object","entries","siteMetadata","forEach","i","link","push","className","title","latestSlug","edges","node","fields","slug","map","id","key","to","frontmatter","description"],"mappings":"2FAAA,wDA2EeA,UArEG,SAAC,GAAgC,IAAD,IAA7BC,KAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,KAC7BC,EAAc,GACdC,EAAc,GASpB,OAPAC,OAAOC,QAAQJ,EAAKK,aAAaH,aAAaI,SAAQ,WAAYC,GAAM,KAAC,IAAdC,EAAa,KACzD,IAATA,IACFP,EAAYQ,KAAKF,GACjBL,EAAYO,KAAKD,OAKpB,yBAAKE,UAAU,kBACd,kBAAC,IAAD,CACEC,MAAOX,EAAKK,aAAaM,MACzBC,WAAYb,EAAOc,MAAM,GAAGC,KAAKC,OAAOC,MAGxC,wBAAIN,UAAU,YACd,6BAASA,UAAU,iCACjB,wBAAIA,UAAU,kBACXX,EAAOc,MAAMI,KAAI,WAAWC,GAAQ,IAAhBJ,EAAe,EAAfA,KACnB,OACE,wBAAIJ,UAAU,eAAeS,IAAKD,GAChC,kBAAC,OAAD,CAAME,GAAIN,EAAKC,OAAOC,KAAMN,UAAU,gBACpC,wBAAIA,UAAU,uBACXI,EAAKO,YAAYV,OAEtB,uBAAGD,UAAU,mBAAmBI,EAAKO,YAAYC","file":"component---src-pages-index-jsx-b1f282b6a4cbcc4f2680.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst IndexPage = ({ data: { allMdx, site } }) => {\n  const socialEnums = []\n  const socialLinks = []\n\n  Object.entries(site.siteMetadata.socialLinks).forEach(([_, link], i) => {\n    if (link !== 0) {\n      socialEnums.push(i)\n      socialLinks.push(link)\n    }\n  })\n\n  return (\n\t  <div className=\"bg-black white\">\n    <Layout\n      title={site.siteMetadata.title}\n      latestSlug={allMdx.edges[0].node.fields.slug}\n    >\n      \n      <hr className=\"mw5 mv3\" />\n      <section className=\"db black center mw5 mw6-l mv4\">\n        <ul className=\" black ma0 pa0\">\n          {allMdx.edges.map(({ node }, id) => {\n            return (\n              <li className=\"list mb4 dim\" key={id}>\n                <Link to={node.fields.slug} className=\"no-underline\">\n                  <h2 className=\"f7 fw6 mv2 white-90\">\n                    {node.frontmatter.title}\n                  </h2>\n                <p className=\"f7 mt0 white-50\">{node.frontmatter.description}</p>\n                </Link>\n              </li>\n            )\n          })}\n        </ul>\n      </section>\n    </Layout>\n    </div>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        socialLinks: PropTypes.any.isRequired,\n      }).isRequired,\n    }).isRequired,\n\n    allMdx: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              description: PropTypes.string.isRequired,\n            }).isRequired,\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        author\n\n        socialLinks {\n          facebook\n          gatsby\n          github\n          imdb\n          linkedin\n          reddit\n          skype\n          slack\n          spotify\n          telegram\n          twitter\n          whatsapp\n        }\n      }\n    }\n\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}